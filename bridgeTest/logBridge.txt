разработка версии 5.2 началась 7 ноября 2020 закончилась ??

oct2021
адаптировано под windows 10 так как невозможно писать в файлы куда программа установлена
добавлен калькулятор стоимости контрактов для опции "решить все расклады противников"
добавлен калькулятор очков для преферанса
исходный опубликован на github
теперь конфиг и вспомогательные картинки хранятся в пользовательском каталоге
удаленые все вспомогательные файлы bridgeX.css остался только один неизменяемый файл bridge.css
все настройки влияющие на css стиль хранятся теперь в конфиге
адаптировано и используется библиотека собственной разработки aslov, которая есть на github
исправлен баг при увеличении/уменьшении размера шрифта (размеры окнон)
исправлен баг при отрисовки панели лучших ходов если большая колода и маленький шрифт

since apr2021
tooltips make as status bar (allow avoid writing width problems)
fixed dinamical adding/removing of analisys/last trick

[интерфейсная часть]
//begin versions.txt
в связи с изменением алгоритма приложение будет работать только под 64-битный windows
опция "решить все расклады противников" добавлена для бриджа. Пару игроков с неизвестными картами можно выбирать. Можно делать поиск, когда у пары осталась хотя бы одна карта. При переборе бриджевых задач используется метод Монте-Карло
опция "решить все расклады противников" расширена для преферанса, теперь можно делать поиск, когда осталась хотя бы одна карта у вистующих/ловцов мизера
добавлена панель оптимальных ходов, на которые можно нажать, чтобы сделать несколько из них
добавлена поддержка колод и стрелок в формате вектороной графики (svg файлы). Добавлены растровые и векторные колоды, добавлены растровые и векторые стрелки
добавлена опция остановки расчетов, пока они не закончены
добавлено полное описание бриджевого и преферансного алгоритмов на русском и английском языках 
обо всех изменениях в новой версии можно прочитать на сайте программы в истории версий
//end versions.txt
функция оценки всех ходов - ускорена для бриджа, так как стала многозадачной, для нее также теперь используется сокращенный интервал поиска
при добавлении новых параметров в конфигурационный файл, теперь считывается старая информация, а не происходит полный сброс настроек, как раньше. В частности при установке более поздней версии поверх старой, будут считываться старые настройки, остальные будут установлены по умолчанию. Порядок строк в файле при чтении теперь не важен.
если в языковом файле если не указан id, то берется номер предыдущего id и увеличивается на единицу
при считывании файла языка отличного от английского и русского, если идентификатор не найден, то используется соответствующая строка из файла английского языка
заменено изображение первой колоды, бубна стала более гладкой (изображение взято в гамблера)
при выходе из приложения при неоконченном расчете, вызывается корректная остановка перебора
так как колода теперь может быть масштабируемой, добавлена поддержка больших мониторов
исправлен баг, теперь нельзя переключать задачи в панели выбора задачи во время расчетов
исправлен баг, теперь нельзя вызвать некоторые пункты меню во время расчетов, например, открыть задачу
исправлен баг при сохранении/загрузки задач, когда сделано больше 50 ходов
исправлен баг если была загружена задача без контракта, а потом менялся язык, то контракт остается не установленным
исправлен баг при вызове калькулятора очков для бриджа при текущей игре преферанс, теперь нет опции мизер
исправлен баг при отрисовке нижнего, угла скругленного стола
исправлен баг при оценке ходов в некоторых задачах
изменено сохранение задачи в html файл, когда файл содержит всего одну задачу. Теперь номер задачи в файле не указывается так как он не нужен
сброс языкового файла, если путь указанный в конфигурационном файле неправильный. Теперь при переносе/переименовании папки с программой она не зависает
удалено меню "проверка новой версии", за ненадобностью
приложение адаптировано под компилятор gcc 10.3.0 и gtk 3.24.30. В новой версии gtk пропали некоторые баги предыдущей версии библиотеки gtk
все статические функции класса Base вынесены в глобальные функции

[логическая часть]
решатель задач по бриджу переписан заново
теперь можно решать несколько задач в одном приложении, таким образом все решается в одном процессе
так как все стало работать в одном процессе, то упрощена синхронизация потоков для бриджевых задач
добавился предварительный расчет ходов
добавились отсечения нижних 4х слоев в бридже и 3х в преферансе, раньше было 3 и 2 соответсвенно
в качестве кодов мастей в бридже теперь использется 32х битное число, по кодам находятся ходы и они же используются для индекса хеш-таблицы. Раньше для кодов мастей использовалить двусвязные списки, а также параллельно битовые коды мастей, по которым находился индекс хеш-таблицы
приложение стало 64х битным. Так как каждый объект класса Bridge требует около 280мб памяти, то если на компьютере 6 и больше ядер, то 32х битному приложению не хватало бы памяти, поэтому приложение стало 64х битным 
теперь не нужен проект bridgeConsole (он удален)
ускорен решатель задач по преферансу TODO** будет описано в файле logPreferans.txt **
более подробно обо всех изменениях в новой версии можно прочитать в <a href="?bridge_logic52">логической части</a>


[interface part]
//begin versions.txt
due to algorithm changes, the application will only work on 64-bit windows
option "solve all opponents deals" has been added for bridge. Pair of players with unknown cards can be chosen. You can do a search when the pair has at least one card left. The Monte Carlo method is used when solving bridge problems.
optimal moves panel added, which you can click on to make a several of them
added support for decks and arrows in vector graphics format (svg files). Added raster and vector decks, added raster and vector arrows
option to stop calculations while they are not finished has been added
added complete descriptions of bridge and preferans algorithms in Russian and English 
you can read about all the changes in the new version on the website in the version history
//end versions.txt
option "solve all opponents deals" was expanded for preferans, now you can do a search when there is at least one card left for whisters or misere catchers
all moves evaluation function - accelerated for bridge since it has become multitasking, it now also uses a reduced search interval
when new parameters are added to the configuration file, the old information is now read instead of a full reset, as before. In particular, when installing a later version over the old one, the old settings will be read and the rest will be set by default. The order of the lines in the file when reading is no longer important.
if there is no id in the language file, the number of previous id is taken and incremented by one
when reading a language file other than English and Russian, if the id is not found, then the corresponding string from the English file is used.
picture of the first deck has been changed, the diamond became smoother (the picture is taken from the gambler)
when exiting from the application in case of incomplete calculation, the correct stopping of the search is called
because the deck can now be scaled, support for large monitors was added
fixed bug, now it is impossible to switch tasks in the task selection panel during calculations.
fixed bug, now you can not call some menu items during calculations, for example, to open the task
fixed bug when saving/loading tasks when more than 50 moves are done.
bug fixed if a task was loaded without a contract, and then the language changed, the contract remains unset.
fixed a bug when calling the calculator of points for the bridge with the current preferans game, now there is no option misere
fixed bug in drawing of bottom, rounded table corner
fixed a bug when evaluating moves in some tasks
problem saving to html file has been changed, when a file contains only one task. Now the number of the problem is not specified in the file, since it is not needed
reset language file, if path indicated in configuration file is wrong. Now when you move/rename a folder with the program, it does not hang
"Check for a new version" menu has been removed, as it is not needed
the application has been adapted to the gcc 10.2.0 compiler and gtk 3.24.24. In the new version of gtk, some bugs of the previous version of the gtk library are vanished
all static functions of Base class are made to global functions

[logical part]
the bridge problem solver has been completely rewritten
now you can solve several tasks in one application, so everything is solved in one process
since everything is solved in one process, synchronization of the bridge problems has been simplified
preliminary calculation of moves was added
added cutoffs of lower 4 layers in bridge and 3 layers in preferans, earlier it was 3 and 2 accordingly
32-bit numbers are now used as suit codes in bridge, they are used to find moves and also for hash table index. Previously, for suit codes used doubly linked lists, as well as parallel bit codes of suits, which were used to find the hash table index.
the application became 64-bit. As each object of the Bridge class requires about 280 MB of memory, if a computer has 6 or more cores, the 32-bit application would not have enough memory, so the application became 64-bit 
the bridgeConsole project is no longer needed (it was removed)
the preferans task solver has been speeded up TODO** it will be described in the file logPreferans.txt **
you can read more about all the changes in the new version in the <a href="?bridge_logic52">logical part</a>

inno{
	remove toolbar images from lasttrick //20nov2020
		"new48.png",
		"folder48.png",
		"save48.png",
		"saveas48.png",
		"editlist48.png",
		"edit48.png" 
из папки images файлы удалены, в исходниках не встречаются. Может быть изменения в inno не требуются

remove old arrow images{arrow48.png,arrow64.png}

inno rewrite deck0 anyway
rewrite ALL  css files //14dec2020
rewrite  all language files

убрать spawn.exe, bridgeConsole
}

add code.html from site folder

нет вычисления 	const int w[] = { ww, (ww + 1) % 4, (ww + 2) % 4, (ww + 3) % 4 }; используется предварительный массив и передается w+t
+3.5% для бриджа
/* file GeorgeCoffin.bts 1-68
 * without BRIDGE_W 13.01
 * with BRIDGE_W 12.56 +3.5%
 */

======begin suretricks on, guicktrick on==========
file GeorgeCoffin.bts 1-68
67 e=10 time=2.87 move=3h, old e=10 time=2.28 move=9h
total 10.09 8.98
the end

file ra.bts 1
 1 e=11 time=6.82 move=qs, old e=11 time=2.14 move=qs
total 6.82 2.14
the end
======end suretricks on, guicktrick on==========
======begin suretricks off, guicktrick off==========
file GeorgeCoffin.bts 1-68
67 e=10 time=2.87 move=3h, old e=10 time=2.37 move=9h
total 10.14 9.25
the end

file ra.bts 1
 1 e=11 time=6.85 move=qs, old e=11 time=5.27 move=qs
total 6.85 5.27
the end
======end suretricks off, guicktrick off==========

18nov.bts
======= original ==============
search[-1 1] [tricks6 7] low0 high14     Bridge.cpp:336 solve()
[-1 1] ah >=1                            bi1.h:50 solve()
[-1 1] 8h >=1                            bi1.h:50 solve()
[-1 1] 5h >=1                            bi1.h:50 solve()
[-1 1] 3h >=1                            bi1.h:50 solve()
end[-1 1]<=-1 [tricks6]                  Bridge.cpp:351 solve()
search[-9 -7] [tricks2 3] low0 high7     Bridge.cpp:336 solve()
[7 9] ah <=7                             bi1.h:50 solve()
end[-7 -7]<=-7 [tricks3]                 Bridge.cpp:351 solve()
search[-5 -3] [tricks4 5] low3 high7     Bridge.cpp:336 solve()
[3 5] ah >=5                             bi1.h:50 solve()
[3 5] 8h >=5                             bi1.h:50 solve()
[3 5] 5h >=5                             bi1.h:50 solve()
[3 5] 3h >=5                             bi1.h:50 solve()
end[-5 -3]<=-5 [tricks4]                 Bridge.cpp:351 solve()
search[-7 -5] [tricks3 4] low3 high5     Bridge.cpp:336 solve()
[5 7] ah <=5                             bi1.h:50 solve()
end[-5 -5]<=-5 [tricks4]                 Bridge.cpp:351 solve()
solve 2.884                              DrawingArea.cpp:1761 countThread()
estimateAll 0.000 fast                   DrawingArea.cpp:1797 countThread()
bestline 0.000 fast                      DrawingArea.cpp:1816 countThread()
======= original ==============

search[a=-1 b=1] [tricks6 7] low0 high14     Bridge.cpp:336 solve()
[-b=-1 -a=1] ah >=1 tr<=6                           bi1.h:50 solve()
[-1 1] 8h >=1 tr<=6                            bi1.h:50 solve()
[-1 1] 5h >=1 tr<=6                            bi1.h:50 solve()
[-1 1] 3h >=1 tr<=6                            bi1.h:50 solve()
end[-1 1]<=-1 [tricks6]                  Bridge.cpp:351 solve()
search[a=-9 b=-7] [tricks2 3] low0 high7     Bridge.cpp:336 solve()
[b=7 a=9] ah <=7 tr>=3                             bi1.h:50 solve()
end[-7 -7]<=-7 [tricks3]                 Bridge.cpp:351 solve()
search[a=-5 b=-3] [tricks4 5] low3 high7     Bridge.cpp:336 solve()
[-b=3 -a=5] ah >=5 tr<=4                             bi1.h:50 solve()
[3 5] 8h >=5 tr<=4                            bi1.h:50 solve()
[3 5] 5h >=5 tr<=4                            bi1.h:50 solve()
[3 5] 3h >=5  tr<=4                           bi1.h:50 solve()
end[-5 -3]<=-5 [tricks4]                 Bridge.cpp:351 solve()
search[-7 -5] [tricks3 4] low3 high5     Bridge.cpp:336 solve()
[5 7] ah <=5 tr>=4                            bi1.h:50 solve()
end[-5 -5]<=-5 [tricks4]                 Bridge.cpp:351 solve()
solve 2.884                              DrawingArea.cpp:1761 countThread()
estimateAll 0.000 fast                   DrawingArea.cpp:1797 countThread()
bestline 0.000 fast                      DrawingArea.cpp:1816 countThread()

}

with all optimizations{
file p1.bts 1
 1 e=5 time=25.61 move=5s, old e=5 time=5.01 move=5s
total 25.61 5.01
the end

file GeorgeCoffin.bts 1-68
64 e=8 time=1.39 move=qh, old e=8 time=0.59 move=qh
67 e=10 time=4.10 move=3h, old e=10 time=2.26 move=9h
total 11.83 9.04
the end
}

without all optimizations{
file p1.bts 1
 1 e=5 time=23.95 move=5s, old e=5 time=5.02 move=5s
total 23.95 5.02
the end

file GeorgeCoffin.bts 1-68
64 e=8 time=1.37 move=qh, old e=8 time=0.61 move=qh
67 e=10 time=4.10 move=3h, old e=10 time=2.36 move=9h
total 12.03 9.33
the end
}
объем памяти для всех ходов в бридже{
число карт в масти n, тогда имеем 4^n кодов мастей
для каждой масти нужны подходящие карты для 4 игроков

максимум карт в масти, без секвенсов  n/2 - для четных,(n+1)/2 - для нечетных 

То есть если n=0..N, обозначим a=N/2 - если N четное, и (N+1)/2 - если N нечетное

нужно памяти sum_n=0^N a*2^(2n+2)

N 9    6.7 Mb
N10   26.7 Mb
N11  128.0 Mb
N12  512.0 Mb
N13 2389.3 Mb

	//sum_n=0^N a*2^(2n+2)
	for(int N=9;N<14;N++){
		uint64_t r=0;
		for(int n=0;n<=N;n++){
			r+=(1<<(2*n+2));
		}
		r*= N%2 ? (N+1)/2 : N/2;
		printf("N%2d %6.1lf Mb\n",N,r/1024./1024.);
	}

}

BRIDGE_W off
file #1.bts 1
total 0.16 0.29
file #2.bts 1
total 0.30 0.12
file #3.bts 1
total 0.15 0.09
file ra.bts 1
 1 e=11 time=6.64 move=qs, old e=11 time=2.07 move=qs
total 6.64 2.07
file GeorgeCoffin.bts 1-68
67 e=10 time=2.84 move=3h, old e=10 time=2.27 move=9h
total 10.39 9.38
the end

BRIDGE_W on
file #1.bts 1
total 0.21 0.20
file #2.bts 1
total 0.27 0.10
file #3.bts 1
total 0.15 0.07
file ra.bts 1
 1 e=11 time=6.53 move=qs, old e=11 time=2.09 move=qs
total 6.53 2.09
file GeorgeCoffin.bts 1-68
67 e=10 time=2.87 move=3h, old e=10 time=2.33 move=9h
total 10.39 9.48
the end

BRIDGE_W on another test
file #1.bts 1
total 0.16 0.16
file #2.bts 1
total 0.26 0.11
file #3.bts 1
total 0.15 0.08
file ra.bts 1
 1 e=11 time=6.47 move=qs, old e=11 time=2.20 move=qs
total 6.47 2.20
file GeorgeCoffin.bts 1-68
67 e=10 time=2.82 move=3h, old e=10 time=2.31 move=9h
total 10.32 9.43
the end


old version with #define QUICK_TRICK #define SURE_TRICKS
file #1.bts 1
total 0.21 0.27
file #2.bts 1
total 0.43 0.17
file #3.bts 1
total 0.19 0.09
file ra.bts 1
 1 e=11 time=6.94 move=qs, old e=11 time=2.26 move=qs
total 6.94 2.26
file GeorgeCoffin.bts 1-68
67 e=10 time=3.03 move=3h, old e=10 time=2.70 move=9h
total 11.52 10.95
the end

old version without #define QUICK_TRICK #define SURE_TRICKS
file #1.bts 1
total 0.17 0.17
file #2.bts 1
total 0.30 0.18
file #3.bts 1
total 0.17 0.09
file ra.bts 1
 1 e=11 time=6.99 move=qs, old e=11 time=5.91 move=qs
total 6.99 5.91
file GeorgeCoffin.bts 1-68
67 e=10 time=2.97 move=3h, old e=10 time=2.67 move=9h
total 11.42 11.22
the end


immediately
file #1.bts 1
total 0.19 0.17
file #2.bts 1
total 0.28 0.11
file #3.bts 1
total 0.14 0.08
file ra.bts 1
 1 e=11 time=5.57 move=qs, old e=11 time=1.94 move=qs
total 5.57 1.94
file GeorgeCoffin.bts 1-68
67 e=10 time=3.87 move=3h, old e=10 time=2.12 move=9h
total 10.65 8.72
the end
no immediately
file #1.bts 1
total 0.17 0.17
file #2.bts 1
total 0.25 0.12
file #3.bts 1
total 0.14 0.08
file ra.bts 1
 1 e=11 time=5.79 move=qs, old e=11 time=1.94 move=qs
total 5.79 1.94
file GeorgeCoffin.bts 1-68
67 e=10 time=2.45 move=3h, old e=10 time=2.11 move=9h
total 9.39 8.57
the end

====4dec2020
объем памяти для хранения ходов в масти содержащей n карт
всего 4^n вариантов, нужно сохранять карты для 4х игроков, по n/2+1 если n четно или (n+1)/2+1 если n нечетно
 байт на каждого игрока. общая функция (n+n%2)/2+1

n=10 4^10*4*(5+1)=24мб
максимум 5 карт+1 завершающий
n=11 4^11*4*(6+1)=4*4*7мб=112мб
n=12 4^12*4*(6+1)=4*112=448мб
n=13 4^13*4*(7+1)=4^4*8мб=2048мб

====5dec2020
without precount moves
file GeorgeCoffin.bts 1-68
67 e=10 time=2.48 move=3h, old e=10 time=2.15 move=9h
total 9.38 8.58
the end

with precount moves
file GeorgeCoffin.bts 1-68
67 e=10 time=2.07 move=3h, old e=10 time=2.14 move=9h
total 8.70 9.33
the end
1-8.70/9.38=1-8.70/9.38=0.072494669509595

--another test
without precount moves
file GeorgeCoffin.bts 1-68
67 e=10 time=2.45 move=3h, old e=10 time=2.15 move=9h
total 9.27 8.66
the end

with precount moves
file GeorgeCoffin.bts 1-68
67 e=10 time=2.08 move=3h, old e=10 time=2.14 move=9h
total 8.34 9.09
the end
1-8.34/9.27=0.100323624595469